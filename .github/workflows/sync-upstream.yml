name: Sync with upstream

on:
  schedule:
    - cron: "0 * * * *"  # Run every hour; adjust as needed
  push:
    branches:
      - main  # Run on push to the main branch
  pull_request:
    branches:
      - main  # Run on pull request targeting the main branch

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config --global user.name 'Jaison'
        git config --global user.email 'jaison4577@gmail.com'

    - name: Add upstream remote
      run: git remote add upstream https://github.com/karankumarsahu/wireguard_server_test.git

    - name: Fetch upstream changes
      run: git fetch upstream

    - name: Check if main.go was changed in upstream
      id: check_main_go
      run: |
        git diff --name-only upstream/main...main | grep -q "main.go" && echo "main.go changed" || echo "main.go not changed"
      
    - name: Merge upstream changes (only if main.go changed)
      if: steps.check_main_go.outputs.result == 'main.go changed'
      run: |
        git checkout main
        git merge upstream/main --strategy=recursive -X theirs --no-edit --allow-unrelated-histories || echo "Merge conflicts, skipping changes"

    - name: Merge upstream changes (preserve local changes if main.go not changed)
      if: steps.check_main_go.outputs.result == 'main.go not changed'
      run: |
        echo "Keeping local changes as main.go was not modified in upstream"

    - name: Push changes to fork (if changes were made)
      run: |
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    - name: Trigger the CI/CD pipeline
      run: |
        curl -X POST -u "${{ secrets.MY_GITHUB_TOKEN }}" \
          -d '{"event_type": "sync-complete"}' \
          "https://api.github.com/repos/${{ github.repository }}/dispatches"
